apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.sdengine.unittest_androidapp"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17 -frtti -fexceptions -DVK_USE_PLATFORM_ANDROID_KHR"
                arguments "-DANDROID_STL=c++_shared"
                abiFilters "armeabi-v7a" , "arm64-v8a"
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
        debug {
            jniLibs.srcDirs = ['libs/Debug']
        }
        release {
            jniLibs.srcDirs = ['libs/Release']
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar','*.so'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}

task doPreBuild(dependsOn: preBuild, type: Exec) {
    println "Current Dir: $buildDir"
    println "Project Dir: $projectDir"
    def proc = "$projectDir/../../../Scripts/CopyAndroidLibs.bat".execute()
    proc.waitForProcessOutput(System.out, System.err)
}
